// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrismWorkApp.Services.Repositories;

namespace PrismWorkApp.Services.Migrations
{
    [DbContext(typeof(bldProjectsPlutoContext))]
    partial class bldProjectsPlutoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.EmployeePosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("EmployeePositions");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fathername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.Picture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    //b.Property<byte[]>("ImageFile")
                    //    .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("INN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OGRN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldConstruction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Laboriousness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NetExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ScopeOfWork")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitOfMeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("bldConstructionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldProjectDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitOfMeasurementId");

                    b.HasIndex("bldConstructionId");

                    b.HasIndex("bldObjectId");

                    b.HasIndex("bldProjectDocumentId");

                    b.HasIndex("bldProjectId");

                    b.ToTable("Constructions");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImageFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PagesNumber")
                        .HasColumnType("int");

                    b.Property<string>("RegId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldConstructionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldProjectId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageFileId");

                    b.HasIndex("bldConstructionId");

                    b.HasIndex("bldDocumentId");

                    b.HasIndex("bldMaterialId");

                    b.HasIndex("bldObjectId");

                    b.HasIndex("bldProjectId1");

                    b.ToTable("bldDocument");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Laboriousness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NetExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ScopeOfWork")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitOfMeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("bldObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldProjectDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitOfMeasurementId");

                    b.HasIndex("bldObjectId");

                    b.HasIndex("bldProjectDocumentId");

                    b.HasIndex("bldProjectId");

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldParticipant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ConstructionCompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NetExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ConstructionCompanyId");

                    b.HasIndex("RoleId");

                    b.HasIndex("bldProjectId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldParticipantRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleCode")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ParticipantRoles");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Laboriousness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NetExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ScopeOfWork")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitOfMeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UnitOfMeasurementId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitOfMeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UnitOfMeasurementId");

                    b.ToTable("bldResource");

                    b.HasDiscriminator<string>("Discriminator").HasValue("bldResource");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldResourseCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("bldResourseCategory");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldResponsibleEmployee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DocConfirmingTheAthorityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NRSId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NetExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldAOSRDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldConstructionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldParticipantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DocConfirmingTheAthorityId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoleId");

                    b.HasIndex("bldAOSRDocumentId");

                    b.HasIndex("bldConstructionId");

                    b.HasIndex("bldObjectId");

                    b.HasIndex("bldParticipantId");

                    b.HasIndex("bldProjectId");

                    b.HasIndex("bldWorkId");

                    b.ToTable("ResponsibleEmployees");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldResponsibleEmployeeRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleCode")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ResponsibleEmployeeRoles");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldUnitOfMeasurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UnitOfMeasurements");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<decimal>("Laboriousness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NetExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ScopeOfWork")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitOfMeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("WorkAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("bldConstructionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitOfMeasurementId");

                    b.HasIndex("WorkAreaId");

                    b.HasIndex("bldConstructionId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldWorkArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Axes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Levels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoredId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("WorkAreas");
                });

            modelBuilder.Entity("bldConstructionbldParticipant", b =>
                {
                    b.Property<Guid>("ConstructionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParticipantsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ConstructionsId", "ParticipantsId");

                    b.HasIndex("ParticipantsId");

                    b.ToTable("bldConstructionbldParticipant");
                });

            modelBuilder.Entity("bldObjectbldParticipant", b =>
                {
                    b.Property<Guid>("BuildingObjectsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParticipantsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BuildingObjectsId", "ParticipantsId");

                    b.HasIndex("ParticipantsId");

                    b.ToTable("bldObjectbldParticipant");
                });

            modelBuilder.Entity("bldParticipantbldWork", b =>
                {
                    b.Property<Guid>("ParticipantsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorksId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParticipantsId", "WorksId");

                    b.HasIndex("WorksId");

                    b.ToTable("bldParticipantbldWork");
                });

            modelBuilder.Entity("bldProjectDocumentbldWork", b =>
                {
                    b.Property<Guid>("ProjectDocumentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("bldWorksId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectDocumentsId", "bldWorksId");

                    b.HasIndex("bldWorksId");

                    b.ToTable("bldProjectDocumentbldWork");
                });

            modelBuilder.Entity("bldRegulationtDocumentbldWork", b =>
                {
                    b.Property<Guid>("RegulationDocumentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("bldWorksId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RegulationDocumentsId", "bldWorksId");

                    b.HasIndex("bldWorksId");

                    b.ToTable("bldRegulationtDocumentbldWork");
                });

            modelBuilder.Entity("bldWorkbldWork", b =>
                {
                    b.Property<Guid>("NextWorksId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PreviousWorksId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NextWorksId", "PreviousWorksId");

                    b.HasIndex("PreviousWorksId");

                    b.ToTable("PreToNexWorksTable");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.Employee", b =>
                {
                    b.HasBaseType("PrismWorkApp.OpenWorkLib.Data.Person");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldConstructionCompany", b =>
                {
                    b.HasBaseType("PrismWorkApp.OpenWorkLib.Data.bldCompany");

                    b.Property<Guid?>("SROIssuingCompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("SROIssuingCompanyId");

                    b.ToTable("ConstructionCompanies");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldAOSRDocument", b =>
                {
                    b.HasBaseType("PrismWorkApp.OpenWorkLib.Data.bldDocument");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("bldWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("bldWorkId")
                        .IsUnique()
                        .HasFilter("[bldWorkId] IS NOT NULL");

                    b.ToTable("AOSRDocuments");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldExecutiveScheme", b =>
                {
                    b.HasBaseType("PrismWorkApp.OpenWorkLib.Data.bldDocument");

                    b.Property<Guid?>("bldWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("bldWorkId");

                    b.ToTable("ExecutiveSchemes");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldLaboratoryReport", b =>
                {
                    b.HasBaseType("PrismWorkApp.OpenWorkLib.Data.bldDocument");

                    b.Property<string>("LaboratoryReportPeeoperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("bldWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("bldWorkId");

                    b.ToTable("LaboratoryReports");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldMaterialCertificate", b =>
                {
                    b.HasBaseType("PrismWorkApp.OpenWorkLib.Data.bldDocument");

                    b.Property<string>("ControlingParament")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeometryParameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NetExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RegulationDocumentsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UnitOfMeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("UnitOfMeasurementId");

                    b.ToTable("MaterialCertificates");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldPasportDocument", b =>
                {
                    b.HasBaseType("PrismWorkApp.OpenWorkLib.Data.bldDocument");

                    b.ToTable("PasportDocuments");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldProjectDocument", b =>
                {
                    b.HasBaseType("PrismWorkApp.OpenWorkLib.Data.bldDocument");

                    b.Property<Guid?>("bldProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("bldProjectId");

                    b.ToTable("ProjectDocuments");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldRegulationtDocument", b =>
                {
                    b.HasBaseType("PrismWorkApp.OpenWorkLib.Data.bldDocument");

                    b.ToTable("RegulationtDocuments");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldMaterial", b =>
                {
                    b.HasBaseType("PrismWorkApp.OpenWorkLib.Data.bldResource");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("bldWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("bldWorkId");

                    b.HasDiscriminator().HasValue("bldMaterial");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldConstruction", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldUnitOfMeasurement", "UnitOfMeasurement")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasurementId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldConstruction", "ParentConstruction")
                        .WithMany("Constructions")
                        .HasForeignKey("bldConstructionId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldObject", "bldObject")
                        .WithMany("Constructions")
                        .HasForeignKey("bldObjectId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldProjectDocument", null)
                        .WithMany("bldConstructions")
                        .HasForeignKey("bldProjectDocumentId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldProject", "bldProject")
                        .WithMany()
                        .HasForeignKey("bldProjectId");

                    b.Navigation("bldObject");

                    b.Navigation("bldProject");

                    b.Navigation("ParentConstruction");

                    b.Navigation("UnitOfMeasurement");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldDocument", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.Picture", "ImageFile")
                        .WithMany()
                        .HasForeignKey("ImageFileId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldConstruction", null)
                        .WithMany("Documentation")
                        .HasForeignKey("bldConstructionId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldDocument", null)
                        .WithMany("AttachedDocuments")
                        .HasForeignKey("bldDocumentId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldMaterial", null)
                        .WithMany("Documents")
                        .HasForeignKey("bldMaterialId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldObject", null)
                        .WithMany("Documentation")
                        .HasForeignKey("bldObjectId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldProject", null)
                        .WithMany("Documentation")
                        .HasForeignKey("bldProjectId1");

                    b.Navigation("ImageFile");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldObject", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldUnitOfMeasurement", "UnitOfMeasurement")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasurementId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldObject", "ParentObject")
                        .WithMany("BuildingObjects")
                        .HasForeignKey("bldObjectId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldProjectDocument", null)
                        .WithMany("bldOjects")
                        .HasForeignKey("bldProjectDocumentId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldProject", "bldProject")
                        .WithMany("BuildingObjects")
                        .HasForeignKey("bldProjectId");

                    b.Navigation("bldProject");

                    b.Navigation("ParentObject");

                    b.Navigation("UnitOfMeasurement");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldParticipant", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldConstructionCompany", "ConstructionCompany")
                        .WithMany("Participants")
                        .HasForeignKey("ConstructionCompanyId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldParticipantRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldProject", "bldProject")
                        .WithMany("Participants")
                        .HasForeignKey("bldProjectId");

                    b.Navigation("bldProject");

                    b.Navigation("ConstructionCompany");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldProject", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldUnitOfMeasurement", "UnitOfMeasurement")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasurementId");

                    b.Navigation("UnitOfMeasurement");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldResource", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldResourseCategory", "Category")
                        .WithMany("Resources")
                        .HasForeignKey("CategoryId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldUnitOfMeasurement", "UnitOfMeasurement")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasurementId");

                    b.Navigation("Category");

                    b.Navigation("UnitOfMeasurement");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldResponsibleEmployee", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldDocument", "DocConfirmingTheAthority")
                        .WithMany()
                        .HasForeignKey("DocConfirmingTheAthorityId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldResponsibleEmployeeRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldAOSRDocument", null)
                        .WithMany("ResponsibleEmployees")
                        .HasForeignKey("bldAOSRDocumentId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldConstruction", null)
                        .WithMany("ResponsibleEmployees")
                        .HasForeignKey("bldConstructionId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldObject", null)
                        .WithMany("ResponsibleEmployees")
                        .HasForeignKey("bldObjectId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldParticipant", "bldParticipant")
                        .WithMany("ResponsibleEmployees")
                        .HasForeignKey("bldParticipantId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldProject", null)
                        .WithMany("ResponsibleEmployees")
                        .HasForeignKey("bldProjectId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldWork", null)
                        .WithMany("ResponsibleEmployees")
                        .HasForeignKey("bldWorkId");

                    b.Navigation("bldParticipant");

                    b.Navigation("DocConfirmingTheAthority");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldWork", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldUnitOfMeasurement", "UnitOfMeasurement")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasurementId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldWorkArea", "WorkArea")
                        .WithMany()
                        .HasForeignKey("WorkAreaId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldConstruction", "bldConstruction")
                        .WithMany("Works")
                        .HasForeignKey("bldConstructionId");

                    b.Navigation("bldConstruction");

                    b.Navigation("UnitOfMeasurement");

                    b.Navigation("WorkArea");
                });

            modelBuilder.Entity("bldConstructionbldParticipant", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldConstruction", null)
                        .WithMany()
                        .HasForeignKey("ConstructionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldParticipant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bldObjectbldParticipant", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldObject", null)
                        .WithMany()
                        .HasForeignKey("BuildingObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldParticipant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bldParticipantbldWork", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldParticipant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldWork", null)
                        .WithMany()
                        .HasForeignKey("WorksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bldProjectDocumentbldWork", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldProjectDocument", null)
                        .WithMany()
                        .HasForeignKey("ProjectDocumentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldWork", null)
                        .WithMany()
                        .HasForeignKey("bldWorksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bldRegulationtDocumentbldWork", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldRegulationtDocument", null)
                        .WithMany()
                        .HasForeignKey("RegulationDocumentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldWork", null)
                        .WithMany()
                        .HasForeignKey("bldWorksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bldWorkbldWork", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldWork", null)
                        .WithMany()
                        .HasForeignKey("NextWorksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldWork", null)
                        .WithMany()
                        .HasForeignKey("PreviousWorksId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.Employee", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.Person", null)
                        .WithOne()
                        .HasForeignKey("PrismWorkApp.OpenWorkLib.Data.Employee", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.EmployeePosition", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.Navigation("Company");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldConstructionCompany", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldCompany", null)
                        .WithOne()
                        .HasForeignKey("PrismWorkApp.OpenWorkLib.Data.bldConstructionCompany", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldCompany", "SROIssuingCompany")
                        .WithMany()
                        .HasForeignKey("SROIssuingCompanyId");

                    b.Navigation("SROIssuingCompany");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldAOSRDocument", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldDocument", null)
                        .WithOne()
                        .HasForeignKey("PrismWorkApp.OpenWorkLib.Data.bldAOSRDocument", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldWork", "bldWork")
                        .WithOne("AOSRDocument")
                        .HasForeignKey("PrismWorkApp.OpenWorkLib.Data.bldAOSRDocument", "bldWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bldWork");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldExecutiveScheme", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldDocument", null)
                        .WithOne()
                        .HasForeignKey("PrismWorkApp.OpenWorkLib.Data.bldExecutiveScheme", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldWork", null)
                        .WithMany("ExecutiveSchemes")
                        .HasForeignKey("bldWorkId");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldLaboratoryReport", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldDocument", null)
                        .WithOne()
                        .HasForeignKey("PrismWorkApp.OpenWorkLib.Data.bldLaboratoryReport", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldWork", null)
                        .WithMany("LaboratoryReports")
                        .HasForeignKey("bldWorkId");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldMaterialCertificate", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldDocument", null)
                        .WithOne()
                        .HasForeignKey("PrismWorkApp.OpenWorkLib.Data.bldMaterialCertificate", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldUnitOfMeasurement", "UnitOfMeasurement")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasurementId");

                    b.Navigation("UnitOfMeasurement");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldPasportDocument", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldDocument", null)
                        .WithOne()
                        .HasForeignKey("PrismWorkApp.OpenWorkLib.Data.bldPasportDocument", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldProjectDocument", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldDocument", null)
                        .WithOne()
                        .HasForeignKey("PrismWorkApp.OpenWorkLib.Data.bldProjectDocument", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldProject", "bldProject")
                        .WithMany()
                        .HasForeignKey("bldProjectId");

                    b.Navigation("bldProject");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldRegulationtDocument", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldDocument", null)
                        .WithOne()
                        .HasForeignKey("PrismWorkApp.OpenWorkLib.Data.bldRegulationtDocument", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldMaterial", b =>
                {
                    b.HasOne("PrismWorkApp.OpenWorkLib.Data.bldWork", null)
                        .WithMany("Materials")
                        .HasForeignKey("bldWorkId");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldConstruction", b =>
                {
                    b.Navigation("Constructions");

                    b.Navigation("Documentation");

                    b.Navigation("ResponsibleEmployees");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldDocument", b =>
                {
                    b.Navigation("AttachedDocuments");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldObject", b =>
                {
                    b.Navigation("BuildingObjects");

                    b.Navigation("Constructions");

                    b.Navigation("Documentation");

                    b.Navigation("ResponsibleEmployees");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldParticipant", b =>
                {
                    b.Navigation("ResponsibleEmployees");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldProject", b =>
                {
                    b.Navigation("BuildingObjects");

                    b.Navigation("Documentation");

                    b.Navigation("Participants");

                    b.Navigation("ResponsibleEmployees");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldResourseCategory", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldWork", b =>
                {
                    b.Navigation("AOSRDocument");

                    b.Navigation("ExecutiveSchemes");

                    b.Navigation("LaboratoryReports");

                    b.Navigation("Materials");

                    b.Navigation("ResponsibleEmployees");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldConstructionCompany", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldAOSRDocument", b =>
                {
                    b.Navigation("ResponsibleEmployees");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldProjectDocument", b =>
                {
                    b.Navigation("bldConstructions");

                    b.Navigation("bldOjects");
                });

            modelBuilder.Entity("PrismWorkApp.OpenWorkLib.Data.bldMaterial", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
